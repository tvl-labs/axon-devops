---
- name: init muta-devops project on server
  hosts: muta-dev
  user: muta
  vars:
    ansible_python_interpreter: /usr/bin/python3
  vars_files:
    - vars/path.yml
  tasks:
    - name: ensure dirs created
      file: path="{{ item }}" state=directory
      with_items:
        - "{{ devops_path }}"
        - "{{ muta_path }}"
        - "{{ configs_path }}"
        - "{{ data_dir }}"
        - "{{ devops_path }}/es-data"
        - "{{ devops_path }}/kibana-data"
        - "{{ devops_path }}/fluent-bit-data"
    - name: copy devops repo for ci
      synchronize:
        src: "{{ playbook_dir }}"
        dest: "{{ devops_path }}/devops/"
        rsync_opts:
          - "--exclude=*/node_modules"
          - "--exclude=*/.git"
          - "--exclude=*/.vagrant"
          - "--exclude=*/.ansible_fact_cache"
    - name: Start service docker, if not started
      service:
        name: docker
        state: started
      become: true
    - name: ensure 'nervos/muta:dev' docker image exists
      docker_image:
        name: nervos/muta
        tag: dev
        source: pull
    - name: copy get_chain_name.py to server
      copy:
        src: get_chain_name.py
        dest: "{{ data_dir }}/get_chain_name.py"
        mode: u=rwx
    - name: copy elasticsearch config
      copy:
        src: "{{ item }}"
        dest: "{{ configs_path }}/{{ item }}"
      with_items:
        - elasticsearch.yml
      notify: restart elasticsearch
    - name: copy kibana config
      copy:
        src: "{{ item }}"
        dest: "{{ configs_path }}/{{ item }}"
      with_items:
        - kibana.yml
      notify: restart kibana
    - name: copy fluent-bit config
      copy:
        src: "{{ item }}"
        dest: "{{ configs_path }}/{{ item }}"
      with_items:
        - fluent-bit-muta-parser.conf
        - fluent-bit-muta-docker.conf
      notify: restart fluent-bit
    - name: start elasticsearch
      docker_container:
        name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
        network_mode: host
        volumes:
            - "{{ configs_path }}/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
            - "{{ devops_path }}/es-data:/usr/share/elasticsearch/data"
        env:
            discovery.type: single-node
    - name: start kibana
      docker_container:
        name: kibana
        image: docker.elastic.co/kibana/kibana:7.4.2
        network_mode: host
        volumes:
            - "{{ configs_path }}/kibana.yml:/usr/share/kibana/config/kibana.yml"
            - "{{ devops_path }}/kibana-data:/usr/share/kibana/data"
    - name: start fluent-bit
      docker_container:
        name: fluent-bit
        image: fluent/fluent-bit:1.3
        network_mode: host
        volumes:
            - "{{ devops_path }}:/data"
        command: /fluent-bit/bin/fluent-bit -c /data/configs/fluent-bit-muta-docker.conf -R /data/configs/fluent-bit-muta-parser.conf
  handlers:
    - name: restart elasticsearch
      command: "docker restart elasticsearch"
    - name: restart kibana
      command: "docker restart kibana"
    - name: restart fluent-bit
      command: "docker restart fluent-bit"

