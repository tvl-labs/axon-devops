---
- name: axon service
  hosts: axon
  remote_user: "{{ remote_server_user }}"
  become: yes
  become_method: sudo
  vars_files:
    - config.yml
  environment:
    MALLOC_CONF: "prof:true,lg_prof_interval:30"
  tasks:
  ###############################################################################################################
    - name: check axon dir
      stat:
        path: "{{ deploy_path }}"
      register: file_status
      tags:
        - deploy

    - name: create axon dir
      file:
        path: "{{ deploy_path }}"
        state: directory
      when:
        file_status.stat.exists == False
      tags:
        - deploy

###############################################################################################################
    - name: Shutdown
      service: name={{ axon_node_service }} state=stopped
      become: yes
      ignore_errors: yes
      tags:
        - shutdown
###############################################################################################################
    - name: Clean axon data
      shell: rm -rf  {{ deploy_path }}/devtools/chain/data
      tags:
        - clean
    - name: Clean axon logs
      shell: rm -rf  {{ deploy_path }}/logs
      tags:
        - clean

###############################################################################################################
    - name: Copy the axon file
      copy:
        src: ./templates/
        dest: "{{ deploy_path }}"
        mode: 0755
      tags:
        - deploy
        - config

    - name: config config.toml
      template: src=./templates/config.toml dest="{{ deploy_path }}/config.toml"
      tags:

    - name: Copy node_prvi_key.yml
      copy:
        src: node_priv_key.yml
        dest: "{{ deploy_path }}/node_priv_key.yml"
        mode: 0755
      tags:
        - deploy
        - config

    - name: Register hostname
      shell: hostname
      register: hostname
      tags:
        - deploy
        - config

    - name: Register privKey
      shell: "cat {{ deploy_path }}/node_priv_key.yml | grep '{{ hostname.stdout }}' | awk '{print $2}' "
      register: privKey
      tags:
        - deploy
        - config

    - name: Replace privKey
      shell:  sed -i "s/#private_key/{{ privKey.stdout }}/g" "{{ deploy_path }}/config.toml"
      tags:
        - deploy
        - config

    - name: Replace bootstraps
      shell:  sed -i "s/#bootstraps/{{ bootstraps }}/g" "{{ deploy_path }}/config.toml"
      tags:
>>>>>>> main
        - deploy
        - config

    - name: Replace mercury
      replace:
        path: "{{ deploy_path }}/config.toml"
        regexp: '#mercury_uri'
        replace: "{{ mercury_uri }}"
      tags:
        - deploy
        - config

    - name: Replace enable_cross_client
      replace:
        path: "{{ deploy_path }}/config.toml"
        regexp: '#enable_cross_client'
        replace: "{{ enable_cross_client }}"
      tags:
        - deploy
        - config

###############################################################################################################
    - name: chmod axon
      shell: "chmod 777 -R {{ deploy_path }}"
      become: yes
      become_method: sudo
      tags:
        - start

    - name: copy axon service file
      template:
        src: ./templates/axon-node.service
        dest: /etc/systemd/system/axon-node.service
      become: yes
      tags:
        - start

    - name: systemctl daemon-reload
      shell: systemctl daemon-reload
      become: yes
      tags:
        - start

    - name: copy ckb service file
      template:
        src: ./templates/axon-node.service
        dest: /etc/systemd/system/axon-node.service
      become: yes
      tags:
        - start

    - name: systemctl daemon-reload
      shell: systemctl daemon-reload
      become: yes
      tags:
        - start

    - name: Start axon
      service: name={{ axon_node_service }} state=started
      become: yes
      when: enable_profile == 'false'
      tags:
        - start

    - name: Start axon
      shell: cd {{ deploy_path }} && echo "nohup /home/ckb/.cargo/bin/flamegraph -o a.svg {{ deploy_path }}/axon -c={{ deploy_path }}/config.toml -g={{ deploy_path }}/genesis.json &" > run.sh && sh run.sh
      when: enable_profile == 'true'
      become: yes
      become_method: sudo
      tags:
        - start

    - name: rpc get_tip_block_number
      shell: curl -s 'http://127.0.0.1:8000' -H 'content-type:application/json' --data-binary '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":2}'  |awk -F "[:\"]+" '{print $6}' | xargs printf %d
      register: get_tip_block_number
      tags:
      - block_number

    - name: show get_tip_block_numner
      debug: msg={{ get_tip_block_number.stdout }}
      tags:
        - block_number
